/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package schoolmanagement;

import DBConnect.DBconnection;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dinesh
 */
public class StudentsDetails extends javax.swing.JFrame {

    /**
     * Creates new form StudentsDetails
     */
    public StudentsDetails() {
        super("Students' Detail");
        initComponents();
        fillComboClass(); 
        textYear.setText("73");
        textStudentID.setEditable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        textPlace = new javax.swing.JTextField();
        textFathersname = new javax.swing.JTextField();
        textMothersname = new javax.swing.JTextField();
        textFatherprofession = new javax.swing.JTextField();
        textMotherprofession = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textAddress = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textMobile = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textTelephone = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        textFathermobile = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        textMothersmobile = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textFathersplaceofwork = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        textMothersplaceofwork = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        radioMale = new javax.swing.JRadioButton();
        radioFemale = new javax.swing.JRadioButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        textRollno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        textStudentID = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        textObservations = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStudentDetails = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StudentDetails");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enter Details"));

        jLabel2.setText("Name:*");

        jLabel3.setText("Father's Name:");

        jLabel4.setText("Mother's Name:");

        jLabel5.setText("Father's Profession:");

        jLabel6.setText("Date of Birth:");

        jLabel7.setText("Place of Birth:");

        jLabel8.setText("Mother's Profession:");

        jLabel9.setText("Observations:");

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        jLabel11.setText("Address:");

        jLabel12.setText("Mobile:");

        jLabel13.setText("Telephone:");

        jLabel14.setText("Father's Mobile:");

        jLabel15.setText("Mother's Mobile:");

        jLabel16.setText("Father's place of work:");

        jLabel17.setText("Mother's place of work:");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Gender:*");

        radioMale.setText("Male");
        radioMale.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioMaleStateChanged(evt);
            }
        });

        radioFemale.setText("Female");
        radioFemale.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioFemaleItemStateChanged(evt);
            }
        });

        jLabel19.setText("Class:*");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel20.setText("Roll No.:*");

        jLabel1.setText("Year:*");

        jLabel21.setText("StudentID:");

        jLabel22.setText("20");

        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setText("Clear Fields");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel20)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFathersname)
                            .addComponent(textMothersname)
                            .addComponent(textFatherprofession)
                            .addComponent(textMotherprofession)
                            .addComponent(textTelephone)
                            .addComponent(textMobile)
                            .addComponent(textPlace)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textRollno)
                            .addComponent(textName)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel19))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(textMothersplaceofwork, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                            .addComponent(textFathermobile, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textFathersplaceofwork, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textMothersmobile, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jButton2))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(radioMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioFemale))
                            .addComponent(jLabel11)
                            .addComponent(jLabel18))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textObservations))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(textStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(textRollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(radioMale)
                    .addComponent(radioFemale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(textTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFathersname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(textFathermobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textMothersname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(textMothersmobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFatherprofession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(textFathersplaceofwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textMotherprofession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(textMothersplaceofwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(textObservations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Students' Detail"));

        tableStudentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableStudentDetails);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jButton3.setText("Delete Selected");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Show All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("Export");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("All Unique Results");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton5.setText("Help");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton5))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if("".equals(textName.getText())||"".equals(textRollno.getText())||"".equals(textYear.getText())||(radioMale.isSelected()==false&&radioFemale.isSelected()==false))
        {
            JOptionPane.showMessageDialog(null, "Please fill the details properly.\n* fields are compulsory.");
        }
        else
        {
            saveStudentsDetails();
        }
        
        
        try
        {
            String clas = jComboBox1.getSelectedItem().toString();
            String year = "20"+textYear.getText();
            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                    + " INNER JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID "
                    + "WHERE idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"'";
            
            showStudentDetailsInTable(sql);
            Rectangle cellBounds = tableStudentDetails.getCellRect(tableStudentDetails.getRowCount() - 1, 0, true);
            tableStudentDetails.scrollRectToVisible(cellBounds);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error:"+e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        
        if(evt.getStateChange()==java.awt.event.ItemEvent.SELECTED)
        {
            String clas = (String) evt.getItem();
            //show next rollno
            textRollno.setText("");
            showNextRollNo(clas);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            String clas = jComboBox1.getSelectedItem().toString();
            String year = "20"+textYear.getText();
            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                    + " LEFT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID "
                    + "WHERE idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"'";
            
            showStudentDetailsInTable(sql);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error:"+e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        showAllStudentDetailsInTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "The CLASS you see in the above table is the class of the student \n"
                + "  of the year mentioned in text field.\n"
                + "It is not the CLASS which was stored while storing the details for the first time.\n"
                + "If you have done mistake in entering CLASS then you must go to View Tab, and update \n"
                + "  CLASS and ROLLNO.\n"
                + "Everytime you update CLASS and ROLLNO inserts a new record of CLASS and ROLLNO (if it's not duplicate).\n"
                + "If you have updated incorrectly then you must go to, Edit Tab>Upgrade Tab>Show>Delete Selected\n"
                + "\nTo delete the record from Students' Detail you must delete the same record from Upgrade Tab,\n"
                + "  which stores the record of CLASS, ROLLNO, ID as you save the record for the first time.\n\n"
                + "If the error says duplicate entry for key NAME, then please go to View Tab and update the details\n"
                + "  for the student.");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        textName.setText("");
        
        //same code as in item state change of combo in class
        String clas = jComboBox1.getSelectedItem().toString();
        //textRollno.setText("");
        jComboBox1.setSelectedIndex(1);
        showNextRollNo(clas);
        
        Date date = dateChooser.getDate();
//        String dateofbirth = DateFormat.getDateInstance().format(date);
        textAddress.setText("");
        textPlace.setText("");
        
        textTelephone.setText("");
        textMobile.setText("");
        textFathersname.setText("");
        textMothersname.setText("");
        textFathermobile.setText("");
        textMothersmobile.setText("");
        textFathersplaceofwork.setText("");
        textMothersplaceofwork.setText("");
        textFatherprofession.setText("");
        textMotherprofession.setText("");
        textObservations.setText("");
        
        textRollno.setText("");
        //take the cursor to the name field
        textName.requestFocus();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int numRows = tableStudentDetails.getSelectedRows().length;
        for(int i=0; i<numRows ; i++ ) 
        {
            DefaultTableModel model = (DefaultTableModel) this.tableStudentDetails.getModel();
            Object studentid = model.getValueAt(tableStudentDetails.getSelectedRow(), 0);
            int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?\n"
                + "You can't undo it.");
            if(option==JOptionPane.YES_OPTION)
            {
                deleteForTable(studentid.toString(), model);
            }
            //deletefromdatabase
//            model.removeRow(tableStudentDetails.getSelectedRow());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void radioMaleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioMaleStateChanged
        // TODO add your handling code here:
        if(radioMale.isSelected())
        {
            radioFemale.setSelected(false);
        }
        
    }//GEN-LAST:event_radioMaleStateChanged

    private void radioFemaleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioFemaleItemStateChanged
        // TODO add your handling code here:
        if(radioFemale.isSelected())
        {
            radioMale.setSelected(false);
        }
    }//GEN-LAST:event_radioFemaleItemStateChanged

    private void textNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try
        {
            //Path path = Paths.get("C:\\SMS\\");
            //writeToExcell(tableStudentsDetails, path);
            Date date= new Date();
            long time = date.getTime();
            java.sql.Timestamp ts = new Timestamp(time);
            String file = "C:\\SMS\\Student Details .xls";
            File f = new File(file);
            exportTable(tableStudentDetails, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(HeadlessException e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        } catch (IOException ex) {
            Logger.getLogger(StudentsDetails.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error: "+ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        showAllUniqueStudentDetailsInTable();
    }//GEN-LAST:event_jButton8ActionPerformed
    private void showAllUniqueStudentDetailsInTable()
    {
            try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            ResultSet resltset = null;
            Statement smnt = con.createStatement();
            String sql = "select STUDENTID, NAME, CLASS, ROLLNO, DATEOFBIRTH, MOBILEPHONE, ADDRESS from studentdetails";
//            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails";
            //    + " LEFT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID";
            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
            com.mysql.jdbc.PreparedStatement pstmt;
            
            pstmt = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql);
            resltset=pstmt.executeQuery();
            tableStudentDetails.setModel(DbUtils.resultSetToTableModel(resltset));
            tableStudentDetails.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableStudentDetails.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableStudentDetails.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableStudentDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableStudentDetails.getColumnModel().getColumn(4).setPreferredWidth(40);
            //pstmt.setString(1, "%" + termexam + "%");                        
        }
        catch(SQLException ex){
            //System.err.println("Unable to load driver!");
            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
                    "\nVendor Error: "+ex.getErrorCode());
            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    
    private void deleteForTable(String studentid, DefaultTableModel model)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("DELETE FROM studentdetails WHERE STUDENTID='"+studentid+"'");
            pstmt.executeUpdate();
            model.removeRow(tableStudentDetails.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Record deleted!");
            
        }
        catch(SQLException e)
        {
            if(e.getSQLState().equals("23000"))
            {
                JOptionPane.showMessageDialog(null, "First you must delete from the same record from the 'Upgrade Tab'.\n"
                        + "Go to Edit>Upgrade Tab then show students on the right table.\n"
                        + "Confirm the deletion for the student.\n"
                        + "Find the same record in this Students' Details table and delete it.");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Error: "+e.getMessage());
            }
            
        }
    }
    public void showStudentDetailsInTable(String sql)
    {
        try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            ResultSet resltset = null;
            Statement smnt = con.createStatement();
            
            
            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
            com.mysql.jdbc.PreparedStatement pstmt;
            
            pstmt = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql);
            resltset=pstmt.executeQuery();
            tableStudentDetails.setModel(DbUtils.resultSetToTableModel(resltset));
            tableStudentDetails.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableStudentDetails.getColumnModel().getColumn(1).setPreferredWidth(110);
            tableStudentDetails.getColumnModel().getColumn(2).setPreferredWidth(65);
            tableStudentDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableStudentDetails.getColumnModel().getColumn(4).setPreferredWidth(40);
            //pstmt.setString(1, "%" + termexam + "%");                        
        }
        catch(SQLException ex){
            //System.err.println("Unable to load driver!");
            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
                    "\nVendor Error: "+ex.getErrorCode());
            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    public void showAllStudentDetailsInTable()
    {
        
        try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            ResultSet resltset = null;
            Statement smnt = con.createStatement();
//            String sql = "select STUDENTID, NAME, CLASS, ROLLNO, DATEOFBIRTH, MOBILEPHONE, ADDRESS from studentdetails";
            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                + " LEFT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID";
            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
            com.mysql.jdbc.PreparedStatement pstmt;
            
            pstmt = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql);
            resltset=pstmt.executeQuery();
            tableStudentDetails.setModel(DbUtils.resultSetToTableModel(resltset));
            tableStudentDetails.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableStudentDetails.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableStudentDetails.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableStudentDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableStudentDetails.getColumnModel().getColumn(4).setPreferredWidth(40);
            //pstmt.setString(1, "%" + termexam + "%");                        
        }
        catch(SQLException ex){
            //System.err.println("Unable to load driver!");
            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
                    "\nVendor Error: "+ex.getErrorCode());
            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    private void showNextRollNo(String clas)
    {
        String rollno;
        String year = "20"+textYear.getText();
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select max(ROLLNO) from idclassroll where CLASS='"+clas+"' and YEAR='"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                rollno = rs.getString(1);
                
                textRollno.setText(Integer.parseInt(rollno)+1+"");
            }
        }
        catch(Exception e)
        {
//            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    public void fillComboClass()
    {
        String clas;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select * from class");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                clas = rs.getString("classes");
                jComboBox1.addItem(clas);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    public void saveStudentsDetails()
    {
        String name = textName.getText();
        
        Date date = dateChooser.getDate();
        String dateofbirth;
        
        if(date==null)
        {
            dateofbirth = "";
        }
        else
        {
            dateofbirth = DateFormat.getDateInstance().format(date);
        }
        
        
        String address = textAddress.getText();
        String placeofbirth = textPlace.getText();
        String sex = null;
        
        if(radioMale.isSelected())
        {
            sex="Male";
        }
        else
        {
            sex="Female";
        }
        
        
        String telephone = textTelephone.getText();
        String mobile = textMobile.getText();
        String fathersname = textFathersname.getText();
        String mothersname = textMothersname.getText();
        String fathersmobile = textFathermobile.getText();
        String mothersmobile = textMothersmobile.getText();
        String fatherplaceofwork = textFathersplaceofwork.getText();
        String motherplaceofwork = textMothersplaceofwork.getText();
        String fathersprofession = textFatherprofession.getText();
        String mothersprofession = textMotherprofession.getText();
        String observation = textObservations.getText();
        String clas = (String) jComboBox1.getSelectedItem();
        String rollno = textRollno.getText();
        
        String year= "20"+textYear.getText();
        try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            PreparedStatement pstmt, pstmt2, pstmt3;
            ResultSet rs;
            pstmt = con.prepareStatement("insert into studentdetails(`NAME`, `CLASS`, `ROLLNO`, `DATEOFBIRTH`, "
                    + "`PLACEOFBIRTH`, `SEX`, `TELEPHONE`, `MOBILEPHONE`, `ADDRESS`, `FATHERNAME`, `MOTHERNAME`, "
                    + "`FATHERMOBILEPHONE`, `MOTHERMOBILEPHONE`, `FATHERPROFESSION`, `MOTHERPROFESSION`, "
                    + "`FATHERPLACEOFWORK`, `MOTHERPLACEOFWORK`, `OBSERVATIONS`) "
                    + "values('"+name+"','"+clas+"','"+rollno+"','"+dateofbirth+"','"+placeofbirth+"','"+sex+"','"+telephone+"','"+mobile+"','"+address+"','"+fathersname+"'"
                    + ",'"+mothersname+"','"+fathersmobile+"','"+mothersmobile+"','"+fathersprofession+"','"+mothersprofession+"','"+fatherplaceofwork+"','"+motherplaceofwork+"','"+observation+"')");
            pstmt.executeUpdate();
            pstmt3 = con.prepareStatement("select STUDENTID FROM studentdetails where CLASS='"+clas+"' and ROLLNO='"+rollno+"'");
            rs=pstmt3.executeQuery();
            String studentid;
            while(rs.next())
            {
                studentid = rs.getString(1);
                textStudentID.setText(studentid);
            }
            
            pstmt2 = con.prepareStatement("insert into idclassroll (`STUDENTID`, `CLASS`, `ROLLNO`, `YEAR`) VALUES"
                    + " ('"+Integer.parseInt(textStudentID.getText())+"','"+clas+"','"+rollno+"','"+year+"')");
            
            pstmt2.executeUpdate();
//            JOptionPane.showMessageDialog(null,"Record Saved Successfully!");
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: "+ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentsDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentsDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentsDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentsDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentsDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JTable tableStudentDetails;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textFathermobile;
    private javax.swing.JTextField textFatherprofession;
    private javax.swing.JTextField textFathersname;
    private javax.swing.JTextField textFathersplaceofwork;
    private javax.swing.JTextField textMobile;
    private javax.swing.JTextField textMotherprofession;
    private javax.swing.JTextField textMothersmobile;
    private javax.swing.JTextField textMothersname;
    private javax.swing.JTextField textMothersplaceofwork;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textObservations;
    private javax.swing.JTextField textPlace;
    private javax.swing.JTextField textRollno;
    private javax.swing.JTextField textStudentID;
    private javax.swing.JTextField textTelephone;
    private javax.swing.JTextField textYear;
    // End of variables declaration//GEN-END:variables

    public void exportTable(JTable table, File file) throws IOException {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        FileWriter out = new FileWriter(file);
        String groupExport = "";
        for (int i = 0; i < (model.getColumnCount()); i++) {//* disable export from TableHeaders
            groupExport = String.valueOf(model.getColumnName(i));
            out.write(String.valueOf(groupExport) + "\t");
        }
        out.write("\n");
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < (model.getColumnCount()); j++) {
                if (model.getValueAt(i, j) == null) {
                    out.write("null" + "\t");
                } else {
                    groupExport = String.valueOf(model.getValueAt(i, j));
                    out.write(String.valueOf(groupExport) + "\t");
                }
            }
            out.write("\n");
        }
        out.close();
    }
}
