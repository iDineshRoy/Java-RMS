/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolmanagement;

import DBConnect.DBconnection;
import DBConnect.MarkstoDB;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dinesh
 */
public class StoreAttendance extends javax.swing.JFrame {

    /**
     * Creates new form StoreAttendance
     */
    public StoreAttendance() {
        super("Store Attendance");
        initComponents();
        fillComboClass();
        textYear.setText("73");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboTermexam = new javax.swing.JComboBox();
        comboClass = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        panelBelow = new javax.swing.JPanel();
        labelTermexam = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        labelNoofstudents = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        buttonEnter = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textClass = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textRollno = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelStudentid = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textAttendance = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAttendance = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Store Attendance");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Store Attendance Of:"));

        jLabel1.setText("Class:");

        jLabel2.setText("Exam:");

        comboTermexam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First Terminal Exam", "Second Terminal Exam", "Third Terminal Exam", "Fourth Terminal Exam" }));

        comboClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClassItemStateChanged(evt);
            }
        });
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        jLabel3.setText("Year:");

        jLabel4.setText("20");

        jButton1.setText("Enter Attendance");
        jButton1.setNextFocusableComponent(textClass);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Show");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textYear))
                            .addComponent(comboClass, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboTermexam, javax.swing.GroupLayout.Alignment.LEADING, 0, 242, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBelow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelBelow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelTermexam.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jLabel14.setText("Total Number of Students:");

        jButton10.setText("Get Name & ID");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        buttonEnter.setText("Save");
        buttonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnterActionPerformed(evt);
            }
        });

        jLabel6.setText("Class:");

        jLabel12.setText("Roll No.:");

        textRollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textRollnoActionPerformed(evt);
            }
        });

        labelName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel28.setText("Name:");

        jLabel10.setText("Stdent Id:");

        jLabel11.setText("Attendance:");

        textAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAttendanceActionPerformed(evt);
            }
        });
        textAttendance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textAttendanceKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelBelowLayout = new javax.swing.GroupLayout(panelBelow);
        panelBelow.setLayout(panelBelowLayout);
        panelBelowLayout.setHorizontalGroup(
            panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBelowLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBelowLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(42, 42, 42)
                        .addComponent(labelNoofstudents, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 66, Short.MAX_VALUE))
                    .addGroup(panelBelowLayout.createSequentialGroup()
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel28)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBelowLayout.createSequentialGroup()
                                .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textRollno, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBelowLayout.createSequentialGroup()
                                .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelBelowLayout.createSequentialGroup()
                                .addComponent(labelStudentid, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonEnter)
                                    .addGroup(panelBelowLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBelowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        panelBelowLayout.setVerticalGroup(
            panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBelowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(labelNoofstudents, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(textRollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(labelStudentid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(textAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(buttonEnter)
                .addGap(97, 97, 97))
        );

        tableAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableAttendance);

        jButton2.setText("Show Records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Record");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Export to Excel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelBelow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton5)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelBelow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClassItemStateChanged
        // TODO add your handling code here:
//        comboSubject.removeAllItems();
        if(evt.getStateChange()==java.awt.event.ItemEvent.SELECTED)
        {
//            String clas = (String) evt.getItem();
//            fillAttendanceTable(clas);
        }
    }//GEN-LAST:event_comboClassItemStateChanged

    private void fillAttendanceTable(String clas)
    {
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, attendance.CLASS, attendance.ROLLNO, attendance.TERM, attendance.YEAR, attendance.ATTENDANCE from attendance "
                    + " inner join studentdetails on attendance.STUDENTID = studentdetails.STUDENTID"
                    + " where attendance.CLASS='"+clas+"' order by attendance.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableAttendance.setModel(DbUtils.resultSetToTableModel(rs));
            tableAttendance.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableAttendance.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableAttendance.getColumnModel().getColumn(2).setPreferredWidth(40);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        //fillComboSpecificSubjects();
    }//GEN-LAST:event_comboClassActionPerformed

    private void textAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAttendanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAttendanceActionPerformed

    private void textAttendanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAttendanceKeyReleased
        // TODO add your handling code here:
        try
        {
            if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                if(textAttendance.getText().equals("")||textClass.getText().equals("")||textYear.getText().equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Please, enter attendance/year/class!");
                }
                else
                {
                    if(Integer.parseInt(textAttendance.getText())<=365)
                    {
                        storeAttendance();
                        String clas = textClass.getText();
                        String year = "20"+textYear.getText();
                        fillCurrentAttendance(clas, year);
                        Rectangle cellBounds = tableAttendance.getCellRect(tableAttendance.getRowCount() - 1, 0, true);
                        tableAttendance.scrollRectToVisible(cellBounds);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter the attendance properly!");
                    }
                }

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error. Please check the input fields properly.");
        }
        
    }//GEN-LAST:event_textAttendanceKeyReleased

    private void fillCurrentAttendance(String clas, String year)
    {
        String exam = (String) comboTermexam.getSelectedItem();
        switch (exam) {
            case "First Terminal Exam":
                exam = "1";
                break;
            case "Second Terminal Exam":
                exam= "2";
                break;
            case "Third Terminal Exam":
                exam= "3";
                break;
            default:
                exam= "4";
                break;
        }
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, attendance.CLASS, attendance.ROLLNO, attendance.TERM, attendance.YEAR, attendance.ATTENDANCE from attendance "
                    + " inner join studentdetails on attendance.STUDENTID = studentdetails.STUDENTID"
                    + " where attendance.CLASS='"+clas+"' and attendance.TERM='"+exam+"' and attendance.YEAR='"+year+"' order by attendance.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableAttendance.setModel(DbUtils.resultSetToTableModel(rs));
            tableAttendance.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableAttendance.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableAttendance.getColumnModel().getColumn(2).setPreferredWidth(40);
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        String clas = textClass.getText();
        String rollno = textRollno.getText();
        String year = "20"+textYear.getText();
        if(rollno.equals("")||year.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Enter 'Class', 'Roll No.' and 'Year' properly.");
        }
        else
        {
            getStudentIDName(clas, rollno, year);
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void buttonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnterActionPerformed
        
        if(textAttendance.getText().equals("")||textClass.getText().equals("")||textYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter attendance/year/class!");
        }
        else
        {
            if(Integer.parseInt(textAttendance.getText())<=365)
            {
                storeAttendance();
                String clas = textClass.getText();
                String year = "20"+textYear.getText();
                fillCurrentAttendance(clas, year);
                Rectangle cellBounds = tableAttendance.getCellRect(tableAttendance.getRowCount() - 1, 0, true);
                tableAttendance.scrollRectToVisible(cellBounds);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter the attendance properly!");
            }
        }
    }//GEN-LAST:event_buttonEnterActionPerformed

    private void storeAttendance()
    {
        
        String rollno = textRollno.getText();
        String exam=null;
        
        String attendance = textAttendance.getText();
        
        
        String stdid = labelStudentid.getText();
        
        switch (labelTermexam.getText()) {
            case "First Terminal Exam":
                exam = "1";
                break;
            case "Second Terminal Exam":
                exam= "2";
                break;
            case "Third Terminal Exam":
                exam= "3";
                break;
            default:
                exam= "4";
                break;
        }
        String clas = textClass.getText();
        String year = "20"+textYear.getText();
        
        MarkstoDB roy = new MarkstoDB();
        roy.storeAttendance(stdid, exam, attendance, year, rollno, textClass.getText());
        int rollmax = Integer.parseInt(labelNoofstudents.getText());
        int x = Integer.parseInt(textRollno.getText());
        if(x<rollmax){
            x++;
            String s = ""+x;
            textRollno.setText(s);
            textAttendance.setText("");
            
            getStudentIDName(clas, s, year);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "You have attendance for all students!");
        }
        
    }
    private void textRollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRollnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRollnoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if("".equals(textYear.getText())){
            JOptionPane.showMessageDialog(null, "Fill the fields correctly!");
        }
        else
        {
            retrieveDetails();
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(textYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter year!");
        }
        else
        {
            String clas = comboClass.getSelectedItem().toString();
            String year = "20"+textYear.getText();
            fillCurrentAttendance(clas, year);
            MainFrame roy = new MainFrame();
//            roy.setLabelNumberofRecords();
            
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public String getNumberOfResults()
    {
        return "45";
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?\n"
                + "You can't undo it.");
        if(option==JOptionPane.YES_OPTION)
        {
            int numRows = tableAttendance.getSelectedRows().length;
            for(int i=0; i<numRows ; i++ ) 
            {
                DefaultTableModel model = (DefaultTableModel) this.tableAttendance.getModel();
                Object clas = model.getValueAt(tableAttendance.getSelectedRow(), 1);
                Object rollno = model.getValueAt(tableAttendance.getSelectedRow(), 2);
                Object term = model.getValueAt(tableAttendance.getSelectedRow(), 3);
                Object year = model.getValueAt(tableAttendance.getSelectedRow(), 4);
                deleteForTable(clas.toString(), rollno.toString(), term.toString(), year.toString(), model);
                //deletefromdatabase
    //            model.removeRow(tableAttendance.getSelectedRow());
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try
        {
            String clas = comboClass.getSelectedItem().toString();
            String year = "20"+textYear.getText();
            fillCurrentAttendance(clas, year);
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Check fields.\nError: ");
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try
        {
//            Path path = Paths.get("C:\\SMS\\");
//            writeToExcell(tableStudentsDetails, path);
            String file = "C:\\SMS\\Attendance.xls";
            File f = new File(file);
            MainFrame roy = new MainFrame();
            roy.exportTable(tableAttendance, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    public void showNumberOfRecords()
    {
        int numRows = tableAttendance.getRowCount()+1;
        String num = numRows+"";
        System.out.println(num);
        MainFrame roy = new MainFrame();
//        roy.setLabelNumberofRecords(Integer.parseInt(num));
    }
    private void deleteForTable(String clas, String rollno, String term, String year, DefaultTableModel model)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("DELETE FROM attendance WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND TERM = '"+term+"' AND YEAR = '"+year+"'");
            pstmt.executeUpdate();
            model.removeRow(tableAttendance.getSelectedRow());            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void retrieveDetails()
    {
        
        MarkstoDB roy = new MarkstoDB();
        String clas = (String)comboClass.getSelectedItem();

        textRollno.setText("1");

        String termexam=(String)comboTermexam.getSelectedItem();
        clas = (String)comboClass.getSelectedItem();
        String noofst = labelNoofstudents.getText();

              
        labelTermexam.setText(termexam);
        String rollno=textRollno.getText();
        String year = textYear.getText();
        textClass.setText(clas);
        int n = Integer.parseInt(year);
        if(n <68 || n>90)
        {
            JOptionPane.showMessageDialog(null, "Enter the year of examination correctly.\nYear must be in B.S.");
        }
        else
        {
            panelBelow.setVisible(true);
            
            String yr = "20"+textYear.getText();
            getStudentIDName(clas, rollno, yr);
            getNumberOfStudents(clas);
        }
        
    }
    private void fillComboClass()
    {
        String clas;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select * from class");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                clas = rs.getString("classes");
                comboClass.addItem(clas);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void getNumberOfStudents(String clas)
    {
        String year = "20"+textYear.getText();
        String noOfStudents;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select count(ROLLNO) from idclassroll where CLASS='"+clas+"' AND YEAR='"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                noOfStudents = rs.getString(1);
                labelNoofstudents.setText(noOfStudents);
                
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    public void getStudentIDName(String clas, String rollno, String year)
    {
        String name,fullmarks;
        int studentid;
        ResultSet rs, rs2;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt, pstmt2;
            pstmt = con.prepareStatement("SELECT * FROM idclassroll WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND YEAR = '"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                studentid = rs.getInt("STUDENTID");

                labelStudentid.setText(studentid+"");

            }
            pstmt2 = con.prepareStatement("SELECT * FROM studentdetails WHERE STUDENTID='"+Integer.parseInt(labelStudentid.getText())+"'");
            rs2 = pstmt2.executeQuery();
            while(rs2.next())
            {
                name = rs2.getString("NAME");
                labelName.setText(name);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoreAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEnter;
    private javax.swing.JComboBox comboClass;
    private javax.swing.JComboBox comboTermexam;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelNoofstudents;
    private javax.swing.JLabel labelStudentid;
    private javax.swing.JLabel labelTermexam;
    private javax.swing.JPanel panelBelow;
    private javax.swing.JTable tableAttendance;
    private javax.swing.JTextField textAttendance;
    private javax.swing.JTextField textClass;
    private javax.swing.JTextField textRollno;
    private javax.swing.JTextField textYear;
    // End of variables declaration//GEN-END:variables
}
