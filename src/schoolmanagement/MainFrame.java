/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package schoolmanagement;
import DBConnect.DBconnection;
import DBConnect.MarkstoDB;
import com.mysql.jdbc.PreparedStatement;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;



/**
 *
 * @author roy
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame

     */
    public MainFrame() {
        super("School Management System 4.9.3");
//        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
//        this.setLocation(dim.width/4-this.getSize().width/4, dim.height/2-this.getSize().height/2);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(0,0,d.width,d.height);
        initComponents();
        //runServers
        runMySQL();

        fillComboClass();
        fillComboSubjects();
        textClass.setEditable(false);
        textNoofstd.setEditable(false);
        labelFullmarks.setEditable(false);
        labelStudentid.setEditable(false);
        textYear.setText("75");
        textYearLeft.setText("75");
        textYearInDetails.setText("75");
        textYearUp1.setText("75");
        textYearUp2.setText("75");
        textYearView.setText("75");
        //here is an error, needs a fix
        addTabs();

        //LoginFrame roy = new LoginFrame();
        //labelStored.setVisible(false);




    //        panelBelow.setVisible(false);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        mainTab = new javax.swing.JTabbedPane();
        addPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        subTab = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        panelTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboTermexam = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        comboSubject = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        textNoofstd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        btnEntermarks = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        panelBelow = new javax.swing.JPanel();
        labelTermexam = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        labelNoofstudents = new javax.swing.JLabel();
        buttonEnter = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textClass = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textRollno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        labelSubject = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        textFM = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textOm = new javax.swing.JTextField();
        labelStudentid = new javax.swing.JTextField();
        labelFullmarks = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMarks = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        labelNoOfResults = new javax.swing.JTextField();
        jButton33 = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        viewSubTab = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        comboClass2 = new javax.swing.JComboBox();
        jButton24 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        textYearView = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableStudentsDetails = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        textRollno1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textAddress = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel30 = new javax.swing.JLabel();
        textPlace = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        textMobile = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        textTelephone = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        textFathersname = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        textMothersname = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        textFatherprofession = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        textMotherprofession = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        textStudentID = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        textFathermobile = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        textMothersmobile = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        textFathersplaceofwork = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        textMothersplaceofwork = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        textSex = new javax.swing.JTextField();
        textClassInDetails = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        textYearInDetails = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        textStudentsNameSearch = new javax.swing.JTextField();
        textFathersNameSearch = new javax.swing.JTextField();
        textMothersNameSearch = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        textTotalSt = new javax.swing.JTextField();
        textMaleSt = new javax.swing.JTextField();
        textFemaleSt = new javax.swing.JTextField();
        panelChart = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        textNoofresults = new javax.swing.JTextField();
        jButton35 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        comboClass4 = new javax.swing.JComboBox();
        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        textYearUp1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jLabel71 = new javax.swing.JLabel();
        textOldRollno = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        comboClass5 = new javax.swing.JComboBox();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        textNewYear = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        textStudentName = new javax.swing.JTextField();
        textPrevRollno = new javax.swing.JTextField();
        textNewRollNo = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        textStudentIDUp = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        comboClass7 = new javax.swing.JComboBox();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        textYearLeft = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        textRollNoLeft = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableNewStudents = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOldStudents = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        comboClass6 = new javax.swing.JComboBox();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        textYearUp2 = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        textLocation = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        textExportLocation = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jButton34 = new javax.swing.JButton();
        jLabel72 = new javax.swing.JLabel();
        textLocation1 = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        textExportLocation1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add"));

        jButton2.setText("Students' Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Class/Sections");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setText("Subjects");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton3.setText("Attendance");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTop.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Terminal Exam");

        comboTermexam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First Terminal Exam", "Second Terminal Exam", "Third Terminal Exam", "Fourth Terminal Exam" }));

        jLabel2.setText("Class");

        comboClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClassItemStateChanged(evt);
            }
        });
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        jLabel3.setText("Subject");

        comboSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSubjectItemStateChanged(evt);
            }
        });
        comboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSubjectActionPerformed(evt);
            }
        });

        jLabel4.setText("No. Of Students");

        jLabel8.setText("Year");

        textYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textYearKeyReleased(evt);
            }
        });

        jLabel9.setText("20");

        jLabel51.setText("B.S.");

        btnEntermarks.setText("Enter Marks");
        btnEntermarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntermarksActionPerformed(evt);
            }
        });

        jButton27.setText("Show Marks If Entered");
        jButton27.setNextFocusableComponent(textClass);
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel51))
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addComponent(btnEntermarks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton27))
                    .addComponent(comboTermexam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textNoofstd, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel51))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textNoofstd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEntermarks)
                    .addComponent(jButton27))
                .addContainerGap())
        );

        panelBelow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelBelow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelTermexam.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jLabel14.setText("Total Number of Students:");

        buttonEnter.setText("Save");
        buttonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnterActionPerformed(evt);
            }
        });

        jLabel6.setText("Class:");

        jLabel12.setText("Roll No.:");

        jLabel7.setText("Subject:");

        labelSubject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton10.setText("Get Name & ID");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel10.setText("Stdent Id:");

        jLabel28.setText("Name:");

        labelName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel18.setText("Question's FM:");

        jLabel13.setText("F.M.:");

        jLabel11.setText("O.M.:");

        textOm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textOmActionPerformed(evt);
            }
        });
        textOm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textOmKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelBelowLayout = new javax.swing.GroupLayout(panelBelow);
        panelBelow.setLayout(panelBelowLayout);
        panelBelowLayout.setHorizontalGroup(
            panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBelowLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBelowLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(27, 27, 27)
                        .addComponent(labelNoofstudents, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonEnter, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBelowLayout.createSequentialGroup()
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBelowLayout.createSequentialGroup()
                                .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel12)
                                .addGap(27, 27, 27)
                                .addComponent(textRollno, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBelowLayout.createSequentialGroup()
                                .addComponent(labelSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton10))
                            .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelBelowLayout.createSequentialGroup()
                                .addComponent(labelStudentid, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelBelowLayout.createSequentialGroup()
                                .addComponent(textFM, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelFullmarks, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(textOm)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBelowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        panelBelowLayout.setVerticalGroup(
            panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBelowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTermexam, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(labelNoofstudents, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel12)
                        .addComponent(textRollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBelowLayout.createSequentialGroup()
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelSubject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(labelStudentid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBelowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(textOm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(textFM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFullmarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonEnter)
                .addGap(167, 167, 167))
        );

        tableMarks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableMarks);

        jButton11.setText("Show OMs");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Show All");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton9.setForeground(new java.awt.Color(255, 51, 0));
        jButton9.setText("Delete Selected");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton29.setText("Export to Excel");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel41.setText("Number of records:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelBelow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNoOfResults, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(panelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelBelow, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11)
                            .addComponent(jButton12)
                            .addComponent(jButton29)
                            .addComponent(jLabel41)
                            .addComponent(labelNoOfResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9))))
                .addGap(23, 23, 23))
        );

        subTab.addTab("Marks", jPanel16);

        jButton33.setText("About Us");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(subTab, javax.swing.GroupLayout.PREFERRED_SIZE, 1097, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jButton33))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2680, 2680, 2680))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(343, 343, 343)
                        .addComponent(jButton33))
                    .addComponent(subTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainTab.addTab("Add", addPanel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Students Currently Studying In"));

        jLabel20.setText("Class:");

        jButton24.setText("View Details");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel21.setText("Year:");

        jLabel22.setText("20");

        jButton14.setText("More Details");
        jButton14.setNextFocusableComponent(textName);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton36.setText("Arrange Alphabetically");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboClass2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textYearView, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(comboClass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(textYearView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24)
                    .addComponent(jButton14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableStudentsDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tableStudentsDetails);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Details"));

        jLabel5.setText("Name:");

        jLabel29.setText("Roll No.:");

        jLabel16.setText("Address:");

        jLabel17.setText("Date of Birth:");

        jLabel30.setText("Place of Birth:");

        jLabel31.setText("Mobile:");

        jLabel32.setText("Telephone:");

        jLabel33.setText("Father's Name:");

        jLabel34.setText("Mother's Name:");

        jLabel35.setText("Father's Profession:");

        jLabel36.setText("Mother's Profession:");

        jLabel37.setText("StudentID:");

        jLabel38.setText("Gender:");

        jLabel39.setText("Class:");

        jLabel40.setText("Age:");

        jLabel42.setText("Father's Mobile:");

        jLabel43.setText("Mother's Mobile:");

        jLabel44.setText("Father's place of work:");

        jLabel45.setText("Mother's place of work:");

        jButton13.setText("Update Details");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton5.setText("Update Class & Roll No.");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel19.setText("Year:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel30)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel16)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel29)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFathersname)
                            .addComponent(textMothersname)
                            .addComponent(textFatherprofession)
                            .addComponent(textMotherprofession)
                            .addComponent(textTelephone)
                            .addComponent(textMobile)
                            .addComponent(textAddress)
                            .addComponent(textPlace)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textRollno1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel39)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel40)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel42)
                                    .addComponent(jLabel43))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(textFathersplaceofwork, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(textYearInDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField18, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textClassInDetails, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                            .addComponent(textSex, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textStudentID, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addComponent(textMothersmobile, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFathermobile, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textMothersplaceofwork, javax.swing.GroupLayout.Alignment.LEADING))
                                .addContainerGap(35, Short.MAX_VALUE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jButton13)
                                .addGap(56, 56, 56)
                                .addComponent(jButton5))
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(textRollno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17))
                            .addComponent(jLabel39))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(textPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(textMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(textYearInDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(textStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textClassInDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(textTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(textFathersname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(textMothersname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(textFatherprofession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44)
                            .addComponent(textFathersplaceofwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(textMotherprofession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45)
                            .addComponent(textMothersplaceofwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(textFathermobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textMothersmobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Navigate"));

        jButton1.setText("View Marksheet");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setText("Add Students' Detail");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Search By"));

        jLabel15.setText("Student's Name:");

        jLabel23.setText("Father's Name:");

        jLabel24.setText("Mother's Name:");

        jButton26.setText("Search");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textMothersNameSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(textFathersNameSearch, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textStudentsNameSearch, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(textStudentsNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(textFathersNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(textMothersNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addContainerGap())
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Male/Female Details"));

        jLabel46.setText("Total Students:");

        jLabel47.setText("Male Students:");

        jLabel48.setText("Female Students:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textTotalSt, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(textMaleSt)
                    .addComponent(textFemaleSt))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(textTotalSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(textMaleSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(textFemaleSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelChart.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 211, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton28.setText("Export to Excel");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jLabel75.setText("No. of results:");

        textNoofresults.setEditable(false);

        jButton35.setText("Show All Unique Results");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textNoofresults, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton28)
                            .addComponent(jLabel75)
                            .addComponent(textNoofresults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton35)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(50, 50, 50))
        );

        viewSubTab.addTab("Details", jPanel10);

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewSubTab, javax.swing.GroupLayout.PREFERRED_SIZE, 1335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewSubTab)
                .addContainerGap())
        );

        mainTab.addTab("View", viewPanel);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Upgrade Class"));

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Upgrade Students of:"));

        jLabel49.setText("Class:");

        comboClass4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClass4ItemStateChanged(evt);
            }
        });
        comboClass4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClass4ActionPerformed(evt);
            }
        });

        jLabel50.setText("Old Year:");

        jLabel52.setText("20");

        jLabel53.setText("B.S.");

        jButton15.setText("Upgrade To");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel71.setText("Roll No.:");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49)
                            .addComponent(jLabel50)
                            .addComponent(jLabel71))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textYearUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(comboClass4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textOldRollno)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jButton15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(comboClass4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(jLabel52)
                    .addComponent(textYearUp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel71)
                    .addComponent(textOldRollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Upgrade To:"));

        jLabel54.setText("New Class:");

        comboClass5.setNextFocusableComponent(textNewYear);
        comboClass5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClass5ItemStateChanged(evt);
            }
        });
        comboClass5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClass5ActionPerformed(evt);
            }
        });

        jLabel55.setText("New Year:");

        jLabel56.setText("20");

        jLabel57.setText("B.S.");

        jLabel58.setText("Students' Name:");

        jLabel59.setText("Previous Roll No.:");

        jLabel60.setText("New Roll No.:");

        textNewRollNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNewRollNoKeyReleased(evt);
            }
        });

        jButton16.setText("Upgrade");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel70.setText("Student ID:");

        jButton19.setText("Get Info");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton21.setText("Show");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60)
                    .addComponent(jLabel55)
                    .addComponent(jLabel54)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(comboClass5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textNewYear, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel57))
                    .addComponent(textPrevRollno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textNewRollNo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textStudentName)
                    .addComponent(textStudentIDUp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jButton19)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jButton16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(comboClass5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(jLabel56)
                    .addComponent(textNewYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57)
                    .addComponent(jButton21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(textStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(textStudentIDUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(textPrevRollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(textNewRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Students' Present/Left"));

        jLabel65.setText("Class:");

        comboClass7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClass7ItemStateChanged(evt);
            }
        });
        comboClass7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClass7ActionPerformed(evt);
            }
        });

        jLabel66.setText("Roll No.:");

        jLabel67.setText("Year:");

        jLabel68.setText("20");

        jLabel69.setText("B.S.");

        jButton18.setText("Set 'Leave'");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton22.setText("Help");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Set 'Present'");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel65)
                    .addComponent(jLabel67)
                    .addComponent(jLabel66))
                .addGap(25, 25, 25)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textRollNoLeft)
                    .addComponent(comboClass7, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textYearLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel69)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton22)
                .addContainerGap())
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton23)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jButton22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(comboClass7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(textRollNoLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel67)
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel68)
                        .addComponent(textYearLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel69)))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton18)
                    .addComponent(jButton23))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "New Students Enrolled"));

        tableNewStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tableNewStudents);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Students"));

        tableOldStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableOldStudents);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Show Students"));

        jLabel61.setText("Class:");

        comboClass6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboClass6ItemStateChanged(evt);
            }
        });
        comboClass6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClass6ActionPerformed(evt);
            }
        });

        jLabel62.setText("Year:");

        jLabel63.setText("20");

        jLabel64.setText("B.S.");

        jButton17.setText("Show");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61)
                    .addComponent(jLabel62))
                .addGap(39, 39, 39)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textYearUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(comboClass6, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addGap(128, 128, 128))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(comboClass6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(jLabel63)
                    .addComponent(textYearUp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addContainerGap())
        );

        jButton20.setText("Delete Selected");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton25.setText("Delete Selected");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton30.setText("Export to Excel");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Export to Excel");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jButton30)
                        .addGap(242, 242, 242)
                        .addComponent(jButton20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton25))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton20)
                            .addComponent(jButton25)
                            .addComponent(jButton30)
                            .addComponent(jButton31))))
                .addGap(62, 62, 62))
        );

        jTabbedPane1.addTab("Upgrade", jPanel18);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        mainTab.addTab("Edit", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Export Database"));

        jButton32.setText("Export Database");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jLabel25.setText("Location to mysqldump:");

        textLocation.setText("C:\\\\xampp\\\\mysql\\\\bin");

        jLabel26.setText("\\\\mysqldump");

        jLabel27.setText("Location & name to export database:");

        textExportLocation.setText("E:\\\\schooldb2018-07-26.sql");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel27))
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textExportLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(textLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jButton32))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(textLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(textExportLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton32)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Import Database"));

        jButton34.setText("Import Database");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jLabel72.setText("Location to sh:");

        textLocation1.setText("C:\\\\xampp\\\\mysql\\\\bin");

        jLabel73.setText("\\\\sh");

        jLabel74.setText("Location & name to import database:");

        textExportLocation1.setText("E:\\\\schooldb2018-07-26.sql");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72)
                    .addComponent(jLabel74))
                .addGap(42, 42, 42)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textExportLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(textLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel73))))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jButton34))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(textLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73))
                .addGap(16, 16, 16)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(textExportLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton34)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(496, Short.MAX_VALUE))
        );

        mainTab.addTab("Database", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 1332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillComboSpecificSubjects(String clas)
    {
        //String clas=(String)comboClass.getSelectedItem();
        String year = "20"+textYear.getText();
        String sub;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select distinct SUBJECTS from subject where CLASS='"+clas+"' and YEAR='"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                sub = rs.getString(1);
                comboSubject.addItem(sub);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void fillComboClass()
    {
        String clas;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection(); 
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select * from class");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                clas = rs.getString("classes");
                comboClass.addItem(clas);
                comboClass2.addItem(clas);
                comboClass4.addItem(clas);
                comboClass5.addItem(clas);
                comboClass6.addItem(clas);
                comboClass7.addItem(clas);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void fillComboSubjects()
    {
        String year = "20"+textYear.getText();
        String clas = (String) comboClass.getSelectedItem();
        comboSubject.removeAllItems();
        String sub;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();            
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select distinct SUBJECTS from subject where YEAR='"+year+"' and CLASS='"+clas+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                sub = rs.getString("SUBJECTS");
                comboSubject.addItem(sub);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MarkSheet roy = new MarkSheet();
        roy.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showGenderDetails()
    {
        String clas = (String) comboClass2.getSelectedItem();
        String year = "20"+textYearView.getText();
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt, pstmt2, pstmt3;
            ResultSet rs, rs2, rs3;
            pstmt = con.prepareStatement("select COUNT(studentdetails.SEX) from studentdetails "
                    + "RIGHT JOIN idclassroll on studentdetails.STUDENTID=idclassroll.STUDENTID "
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"' AND studentdetails.SEX ='Male'" );
            pstmt2 = con.prepareStatement("select COUNT(studentdetails.SEX) from studentdetails "
                    + "RIGHT JOIN idclassroll on studentdetails.STUDENTID=idclassroll.STUDENTID "
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"' AND studentdetails.SEX ='Female'" );
            pstmt3 = con.prepareStatement("select COUNT(studentdetails.SEX) from studentdetails "
                    + "RIGHT JOIN idclassroll on studentdetails.STUDENTID=idclassroll.STUDENTID "
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"'" );
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                textMaleSt.setText(rs.getString(1));                
            }
            rs2 = pstmt2.executeQuery();
            while(rs2.next())
            {
                textFemaleSt.setText(rs2.getString(1));                
            }
            rs3 = pstmt3.executeQuery();
            while(rs3.next())
            {
                textTotalSt.setText(rs3.getString(1));                
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void showBarDiagram()
    {
        
        try{
        String male = textMaleSt.getText(), female = textFemaleSt.getText();
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(Integer.parseInt(male), "No. of Students","Male");
        dataset.setValue(Integer.parseInt(female), "No. of Students","Female");
        
//        for(int i=0;i<numRows;i++)
//        {
//            dataset.setValue(Float.parseFloat(marks.get(i).toString()), "Marks", subjects.get(i).toString());
//        }
        
        JFreeChart chart = ChartFactory.createBarChart3D("Students", "Gender", "No. of Students", dataset, PlotOrientation.VERTICAL, false, true, false);
//        JFreeChart piechart = ChartFactory.createPieChart("Students", (PieDataset) dataset);
        
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
//        panelChart.setLayout(BorderLayout);
        Dimension panelSize = panelChart.getSize();
        ChartPanel roy = new ChartPanel(chart);
        panelChart.removeAll();
        panelChart.add(roy, BorderLayout.CENTER);
        roy.setSize(panelSize);
        panelChart.validate();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }

    }
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        AddSubjects roy =  new AddSubjects();
        roy.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        AddClass roy = new AddClass();
        roy.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        StudentsDetails roy = new StudentsDetails();
        roy.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void textOmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textOmKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(textOm.getText().equals("")||labelName.getText().equals("")||labelStudentid.getText().equals("")||textClass.getText().equals("")||textRollno.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Enter Obtained Marks properly.\n"
                        + "Previous fields also must be filled properly!");
            }
            else
            {
                enter_marks();
                
                //for showing in the table
                String clas = textClass.getText();
                String year = "20"+textYear.getText();
                String exam = labelTermexam.getText();
                switch (exam) {
                    case "First Terminal Exam":
                        exam = "1";
                        break;
                    case "Second Terminal Exam":
                        exam= "2";
                        break;
                    case "Third Terminal Exam":
                        exam= "3";
                        break;
                    default:
                        exam= "4";
                        break;
                }
                String sub=labelSubject.getText();
                fillTable(clas, year, exam, sub);
                showNumberOfRecords();
                Rectangle cellBounds = tableMarks.getCellRect(tableMarks.getRowCount() - 1, 0, true);
                tableMarks.scrollRectToVisible(cellBounds);
            }
        }
    }//GEN-LAST:event_textOmKeyReleased

    private void textOmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textOmActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_textOmActionPerformed

    private void buttonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnterActionPerformed
        // TODO add your handling code here:
        if(textOm.getText().equals("")||labelName.getText().equals("")||labelStudentid.getText().equals("")||textClass.getText().equals("")||textRollno.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Enter Obtained Marks properly.\n"
                    + "Previous fields also must be filled properly!");
        }
        else
        {
            enter_marks();
            
            //for showing in the table
            String clas = textClass.getText();
            String year = "20"+textYear.getText();
            String exam = labelTermexam.getText();
            switch (exam) {
                case "First Terminal Exam":
                    exam = "1";
                    break;
                case "Second Terminal Exam":
                    exam= "2";
                    break;
                case "Third Terminal Exam":
                    exam= "3";
                    break;
                default:
                    exam= "4";
                    break;
            }
            String sub=labelSubject.getText();
            fillTable(clas, year, exam, sub);
            showNumberOfRecords();
            
            Rectangle cellBounds = tableMarks.getCellRect(tableMarks.getRowCount() - 1, 0, true);
            tableMarks.scrollRectToVisible(cellBounds);
        }
    }//GEN-LAST:event_buttonEnterActionPerformed

    private void btnEntermarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntermarksActionPerformed
        // TODO add your handling code here:
//        mainTab.setSelectedIndex(2);
        if("".equals(textNoofstd.getText())||"".equals(textYear.getText())){
            JOptionPane.showMessageDialog(null, "Fill the fields correctly!");
        }
        else{
            //panelTop.setVisible(false);
//            textFullmarks.setEditable(false);
//            textNoofstd.setEditable(false);
//            textYear.setEditable(false);
            MarkstoDB roy = new MarkstoDB();
            String clas = (String)comboClass.getSelectedItem();
            
            
            toEntermarks();
            if(textYear.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please, enter year!");
            }
            else
            {
                //showSpecificObtainedMarks();
                JOptionPane.showMessageDialog(null, "Enter marks for:\nYear: 20"+textYear.getText()+"\nTerm: "+comboTermexam.getSelectedItem().toString()+""
                        + "\nSubject: "+comboSubject.getSelectedItem().toString()+"\nClass: "+comboClass.getSelectedItem().toString());
            }
        }

    }//GEN-LAST:event_btnEntermarksActionPerformed

    private void comboClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClassItemStateChanged
        // TODO add your handling code here:
        comboSubject.removeAllItems();
        if(evt.getStateChange()==java.awt.event.ItemEvent.SELECTED)
        {
            String clas = (String) evt.getItem();
            fillComboSpecificSubjects(clas);
            ShowNumberOfStudents(clas);
            //fillMarksTable(clas);
        }
    }//GEN-LAST:event_comboClassItemStateChanged

    private void fillMarksTable(String clas)
    {
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, om.SUBJECTS, om.ROLLNO, om.TERM, om.YEAR, om.OBTAINEDMARKS from om "
                    + " inner join studentdetails on om.STUDENTID = studentdetails.STUDENTID"
                    + " where om.CLASS='"+clas+"' order by om.SUBJECTS ASC, om.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableMarks.setModel(DbUtils.resultSetToTableModel(rs));
            tableMarks.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(2).setPreferredWidth(40);
            tableMarks.getColumnModel().getColumn(3).setPreferredWidth(40);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void ShowNumberOfStudents(String clas)
    {
        String year = "20"+textYear.getText();
        String noOfStudents;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select count(ROLLNO) from idclassroll where CLASS='"+clas+"' AND YEAR='"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                noOfStudents = rs.getString(1);
                textNoofstd.setText(noOfStudents);
                
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void comboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSubjectActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comboSubjectActionPerformed

    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        //fillComboSpecificSubjects();
    }//GEN-LAST:event_comboClassActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?\n"
                + "You can't undo it.");
        if(option==JOptionPane.YES_OPTION)
        {
            int numRows = tableMarks.getSelectedRows().length;
            for(int i=0; i<numRows ; i++ ) 
            {
                DefaultTableModel model = (DefaultTableModel) this.tableMarks.getModel();
                Object sub = model.getValueAt(tableMarks.getSelectedRow(), 1);
                String clas = (String) comboClass.getSelectedItem();
                Object rollno = model.getValueAt(tableMarks.getSelectedRow(), 2);
                Object term = model.getValueAt(tableMarks.getSelectedRow(), 3);
                Object year = model.getValueAt(tableMarks.getSelectedRow(), 4);
                deleteForTable(sub.toString(), clas, rollno.toString(), term.toString(), year.toString(), model);
                //deletefromdatabase
    //            model.removeRow(tableMarks.getSelectedRow());
            }
        }
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if(textClass.getText().equals("")||textRollno.getText().equals("")||textYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter 'Class', 'Roll No.' and 'Year' at first.");
        }
        else
        {
            String clas = textClass.getText();
            String rollno = textRollno.getText();
            String year = "20"+textYear.getText();
            getStudentIDName(clas, rollno, year);
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void comboSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSubjectItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSubjectItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        StoreAttendance roy = new StoreAttendance();
        roy.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if(textYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please, enter year!");
        }
        else
        {
            showSpecificObtainedMarks();
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

        private void runMySQL()
        {
            try
            {

                /***********************************************************/
                // Execute Shell Command
                /***********************************************************/
                String executeCmd = null;
                executeCmd = "C:\\xampp\\mysql\\bin\\mysqld.exe";

                Process runtimeProcess =Runtime.getRuntime().exec(executeCmd);
                Thread.sleep(5000); //sleeping for 5 seconds waiting to run the xampp properly
//                int processComplete = runtimeProcess.waitFor();
//                if(processComplete == 0)
//                {
//                    JOptionPane.showMessageDialog(this,"Servers started successfully!");
//
//                } else  
//                {
//                    JOptionPane.showMessageDialog(this,"Couldn't start the servers!");
//                }
                //            Runtime runtime = Runtime.getRuntime();
                //            runtime.exec(new String[]{"C:\\xampp\\mysql\\bin\\mysqldump -u root -p guesswhat > E:\\backup.sql"});
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Error:"+e);
            }
        }
    private void showSpecificObtainedMarks()
    {
        String clas = (String) comboClass.getSelectedItem();
        String year = "20"+textYear.getText();
        String exam = (String) comboTermexam.getSelectedItem();
        switch (exam) {
            case "First Terminal Exam":
                exam = "1";
                break;
            case "Second Terminal Exam":
                exam= "2";
                break;
            case "Third Terminal Exam":
                exam= "3";
                break;
            default:
                exam= "4";
                break;
        }
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, om.SUBJECTS, om.ROLLNO, om.TERM, om.YEAR, om.OBTAINEDMARKS from om "
                    + " inner join studentdetails on om.STUDENTID = studentdetails.STUDENTID"
                    + " where om.CLASS='"+clas+"' AND om.TERM='"+exam+"' AND om.YEAR='"+year+"' order by om.SUBJECTS ASC, om.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableMarks.setModel(DbUtils.resultSetToTableModel(rs));
            tableMarks.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(2).setPreferredWidth(40);
            tableMarks.getColumnModel().getColumn(3).setPreferredWidth(40);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Can not retrieve details.\nError: "+e);
        }
    showNumberOfRecords();
    }
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String clas = (String)comboClass.getSelectedItem();
        fillMarksTable(clas);
        showNumberOfRecords();
    }//GEN-LAST:event_jButton12ActionPerformed

    public void showNumberOfRecords()
    {
        int numRows = tableMarks.getRowCount();
        labelNoOfResults.setText(numRows+"");
    }
    public void setLabelNumberofRecords()
    {
        StoreAttendance roy = new StoreAttendance();
        System.out.println(roy.getNumberOfResults());
        labelNoOfResults.setText(roy.getNumberOfResults());
    }
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.tableStudentsDetails.getModel();
        Object studentid = model.getValueAt(tableStudentsDetails.getSelectedRow(), 0);
        Object clas = model.getValueAt(tableStudentsDetails.getSelectedRow(), 2);
        try
        {
            retrieveMoreDetails(studentid.toString(), clas.toString());
        }
        catch(Exception e)
        {
            retrieveMoreDetailsForExceptionalCase(studentid.toString());
            JOptionPane.showMessageDialog(null, "Please select a row.\nError: "+e);
        }
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void retrieveMoreDetailsForExceptionalCase(String studentid)
    {
        String dateValue;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            ResultSet rs, rs2;
            
            pstmt = con.prepareStatement("select STUDENTID, NAME, ROLLNO, DATEOFBIRTH, PLACEOFBIRTH, SEX, TELEPHONE, MOBILEPHONE, "
                    + "ADDRESS, FATHERNAME, MOTHERNAME, FATHERMOBILEPHONE, MOTHERMOBILEPHONE, FATHERPROFESSION, "
                    + "MOTHERPROFESSION, FATHERPLACEOFWORK, MOTHERPLACEOFWORK, OBSERVATIONS from studentdetails "
                    + " where STUDENTID='"+studentid+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                textStudentID.setText(rs.getString("STUDENTID"));
                textName.setText(rs.getString("NAME"));
                
                textAddress.setText(rs.getString("ADDRESS"));
                
                
                
                textPlace.setText(rs.getString("PLACEOFBIRTH"));
                textMobile.setText(rs.getString("MOBILEPHONE"));
                textTelephone.setText(rs.getString("TELEPHONE"));
                textSex.setText(rs.getString("SEX"));
                textFathersname.setText(rs.getString("FATHERNAME"));
                textMothersname.setText(rs.getString("MOTHERNAME"));
                textFathermobile.setText(rs.getString("FATHERMOBILEPHONE"));
                textMothersmobile.setText(rs.getString("MOTHERMOBILEPHONE"));
                textFatherprofession.setText(rs.getString("FATHERPROFESSION"));
                textMotherprofession.setText(rs.getString("MOTHERPROFESSION"));
                textFathersplaceofwork.setText(rs.getString("FATHERPLACEOFWORK"));
                textMothersplaceofwork.setText(rs.getString("MOTHERPLACEOFWORK"));
                
                dateValue = rs.getString("DATEOFBIRTH");
                java.util.Date date = new SimpleDateFormat("MMM dd, yyyy").parse(dateValue);
                dateChooser.setDate(date);
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void comboClass4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClass4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass4ItemStateChanged

    private void comboClass4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClass4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass4ActionPerformed

    private void comboClass5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClass5ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass5ItemStateChanged

    private void comboClass5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClass5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass5ActionPerformed

    private void comboClass7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClass7ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass7ItemStateChanged

    private void comboClass7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClass7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass7ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if(textRollNoLeft.getText().equals("")||textYearLeft.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please specify the 'Class', 'Roll No.' and 'Year' of the leaving student.");
        }
        else
        {
            setLeave(comboClass7.getSelectedItem().toString(), textRollNoLeft.getText(), "20"+textYearLeft.getText());
        }
        
    }//GEN-LAST:event_jButton18ActionPerformed

    private void setLeave(String clas, String rollno, String year)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("UPDATE idclassroll SET STATUS='Left' WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND YEAR = '"+year+"'");
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Set Left!");
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    
    private void setPresent(String clas, String rollno, String year)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("UPDATE idclassroll SET STATUS='Present' WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND YEAR = '"+year+"'");
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Set Present!");
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        if(textYearUp1.getText().equals("")||textOldRollno.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "At first, please enter 'Old Year' and 'Roll No.' properly.");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Before you upgrade it you must set 'Leave' for the students who left the school.");
            //show old students

            textStudentIDUp.setEditable(false);
            String year = "20"+textYearUp1.getText();
            String clas = (String) comboClass4.getSelectedItem();
            showOldStudents(year, clas);
            String rollno = textOldRollno.getText();
            showOldDetails(rollno);
        }
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void showOldDetails(String roll)
    {
        ResultSet rs;
        String year="20"+textYearUp1.getText();
        String clas = (String) comboClass4.getSelectedItem();
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, studentdetails.STUDENTID, idclassroll.ROLLNO  from studentdetails "
                    + " inner join idclassroll on idclassroll.STUDENTID = studentdetails.STUDENTID"
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.ROLLNO ='"+roll+"' AND idclassroll.YEAR='"+year+"' AND idclassroll.STATUS='Present'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                textStudentName.setText(rs.getString(1));
                textStudentIDUp.setText(rs.getString(2));
                textPrevRollno.setText(rs.getString(3));
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if(textNewRollNo.getText().equals("")||textNewYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter 'New Roll No.', 'New Year' and select the new class properly.");
        }
        upgradeDetails();
        
        showOldDetails(textPrevRollno.getText());
        showNewStudents();
        textNewRollNo.setText("");
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        if(textYearUp1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please fill up the panel above and enter 'Previous Roll No.'.");
        }
        else
        {
            String rollno = textPrevRollno.getText();
            showOldDetails(rollno);
        }

    }//GEN-LAST:event_jButton19ActionPerformed

    private void comboClass6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboClass6ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass6ItemStateChanged

    private void comboClass6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClass6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClass6ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        if(textYearUp2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "For which year?\nPlease enter.");
        }
        else
        {
            String year="20"+textYearUp2.getText();
            String clas = comboClass6.getSelectedItem().toString();
            showOldStudents(year, clas);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void textNewRollNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNewRollNoKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(textNewRollNo.getText().equals("")||textNewYear.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter 'New Roll No.', 'New Year' and select the new class properly.");
            }
            upgradeDetails();
            
            showOldDetails(textPrevRollno.getText());
            showNewStudents();
            textNewRollNo.setText("");        
            Rectangle cellBounds = tableNewStudents.getCellRect(tableNewStudents.getRowCount() - 1, 0, true);
            tableNewStudents.scrollRectToVisible(cellBounds);
        }
        
    }//GEN-LAST:event_textNewRollNoKeyReleased

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        try{
            int numRows = tableNewStudents.getSelectedRows().length;
            for(int i=0; i<numRows ; i++ ) 
            {
                DefaultTableModel model = (DefaultTableModel) this.tableNewStudents.getModel();
                Object clas = model.getValueAt(tableNewStudents.getSelectedRow(), 1);
                Object rollno = model.getValueAt(tableNewStudents.getSelectedRow(), 2);
                Object year = model.getValueAt(tableNewStudents.getSelectedRow(), 3);
                int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?\n"
                + "You can't undo it.");
                if(option==JOptionPane.YES_OPTION)
                {
                    deleteFromTableNewStudents(clas.toString(), rollno.toString(), year.toString(), model);
                }
                //deleteForTable(sub.toString(), clas, rollno.toString(), term.toString(), year.toString());
                //deletefromdatabase
//                model.removeRow(tableNewStudents.getSelectedRow());
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void deleteFromTableNewStudents(String clas, String rollno, String year, DefaultTableModel model)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("DELETE FROM idclassroll WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND YEAR = '"+year+"'");
            pstmt.executeUpdate();
            model.removeRow(tableOldStudents.getSelectedRow());            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        if(textNewYear.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "To show students in new class you must enter 'New Year'.");
        }
        else
        {
            showNewStudents();
        }
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "The record of the student will not be shown if you upgrade the class.\n"
                + "You can get the records back if the student returns.\n"
                + "If the student left in year 2073 'Set Leave' for year 2073.\n"
                + "By doing this the student will not appear for upgrade in year 2074.\n"
                + "Setting leave doesn't remove the previous records of the student.");
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        if(textRollNoLeft.getText().equals("")||textYearLeft.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please specify the 'Class', 'Roll No.' and 'Year' of the returned student.");
        }
        else
        {
            setPresent(comboClass7.getSelectedItem().toString(), textRollNoLeft.getText(), "20"+textYearLeft.getText());
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(textSex.getText().equals("Male")||textSex.getText().equals("Female"))
        {
            int confirm=JOptionPane.showConfirmDialog(null, "Are you sure you want to update the details?\n"
                    + "This wont change the 'Class', 'Roll No.' and 'Year'.");
            if(confirm==JOptionPane.YES_OPTION)
            {
                updateStudentDetails();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Enter Gender: Male/Female.");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "You are about to update 'Class', 'Roll No.' and 'Year'");
        String id=textStudentID.getText();
        String clas = textClassInDetails.getText();
        String rollno = textRollno1.getText();
        String year = textYearInDetails.getText();
        
        if(year.equals("")||clas.equals("")||rollno.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter Year/Class/RollNo.");
        }
        else
        {
            int dialogresult = JOptionPane.showConfirmDialog(null, "Are you sure you want to insert a record with:\n"
                    + "Student ID: '"+id+"'\nClass: '"+clas+"'\nRoll No.: '"+rollno+"'\nYear: '"+year+"'?");
            if(dialogresult==JOptionPane.YES_OPTION)
            {
                insertIntoIDClassRoll(id, clas, rollno, year);
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed

        if(textYearView.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "For which year?\nPlease enter year.");
        }
        else
        {
            String clas = comboClass2.getSelectedItem().toString();
            String year = "20"+textYearView.getText();
            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                    + " RIGHT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID "
                    + "WHERE idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"'";
            showStudentDetailsInTable(sql); 
            showGenderDetails();
            showBarDiagram();
            showNumberOfsearchedRecords();
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        try{
            int numRows = tableOldStudents.getSelectedRows().length;
            for(int i=0; i<numRows ; i++ ) 
            {
                DefaultTableModel model = (DefaultTableModel) this.tableOldStudents.getModel();
                Object clas = model.getValueAt(tableOldStudents.getSelectedRow(), 1);
                Object rollno = model.getValueAt(tableOldStudents.getSelectedRow(), 2);
                Object year = model.getValueAt(tableOldStudents.getSelectedRow(), 3);
                int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?\n"
                + "You can't undo it.");
                if(option==JOptionPane.YES_OPTION)
                {
                    deleteFromTableNewStudents(clas.toString(), rollno.toString(), year.toString(), model);
                }
                //deleteForTable(sub.toString(), clas, rollno.toString(), term.toString(), year.toString());
                //deletefromdatabase
//                model.removeRow(tableOldStudents.getSelectedRow());
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        mainTab.setSelectedIndex(0);
        subTab.setSelectedIndex(2);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        String studentsname = textStudentsNameSearch.getText();
        String fathersname = textFathersNameSearch.getText();
        String mothersname = textMothersNameSearch.getText();
        //While changing queries always remember what is gonna happen to the 
        String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                + " LEFT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID "
                + "WHERE studentdetails.NAME LIKE '%"+studentsname+"%' AND studentdetails.FATHERNAME LIKE '%"+fathersname+"%' AND studentdetails.MOTHERNAME LIKE '%"+mothersname+"%'";
        showStudentDetailsInTable(sql); 
        showNumberOfsearchedRecords();
    }//GEN-LAST:event_jButton26ActionPerformed

    public void showNumberOfsearchedRecords()
    {
        int numRows = tableStudentsDetails.getRowCount();
        textNoofresults.setText(numRows+"");
    }
    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        try
        {
            //for showing in the table
            String clas = (String) comboClass.getSelectedItem();
            String year = "20"+textYear.getText();
            String exam = (String) comboTermexam.getSelectedItem();
            switch (exam) {
                case "First Terminal Exam":
                    exam = "1";
                    break;
                case "Second Terminal Exam":
                    exam= "2";
                    break;
                case "Third Terminal Exam":
                    exam= "3";
                    break;
                default:
                    exam= "4";
                    break;
            }
            String sub=(String)comboSubject.getSelectedItem();
            fillTable(clas, year, exam, sub);
            showNumberOfRecords();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void textYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textYearKeyReleased
        // TODO add your handling code here:
        fillComboSubjects();
        ShowNumberOfStudents((String)comboClass.getSelectedItem());
    }//GEN-LAST:event_textYearKeyReleased

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        try
        {
//            Path path = Paths.get("C:\\SMS\\");
//            writeToExcell(tableStudentsDetails, path);
            String file = "C:\\SMS\\StudentsDetail.xls";
            File f = new File(file);
            exportTable(tableStudentsDetails, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
        
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        try
        {
//            Path path = Paths.get("C:\\SMS\\");
//            writeToExcell(tableStudentsDetails, path);
            String file = "C:\\SMS\\Mark-Ledger.xls";
            File f = new File(file);
            exportTable(tableMarks, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        try
        {
//            Path path = Paths.get("C:\\SMS\\");
//            writeToExcell(tableStudentsDetails, path);
            String file = "C:\\SMS\\NewStudents.xls";
            File f = new File(file);
            exportTable(tableNewStudents, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        try
        {
//            Path path = Paths.get("C:\\SMS\\");
//            writeToExcell(tableStudentsDetails, path);
            String file = "C:\\SMS\\OldStudents.xls";
            File f = new File(file);
            exportTable(tableOldStudents, f);
            JOptionPane.showMessageDialog(null, "Exported successfully!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
        AboutUs roy = new AboutUs();
        roy.setVisible(true);
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        try
        {
            String dbName = "schooldb";
            String dbUser = "root";
            String dbPass = "guesswhat";
            String location = textLocation.getText();
            String exportLocation = textExportLocation.getText();
            
            /***********************************************************/
            // Execute Shell Command
            /***********************************************************/
            String executeCmd = null;
            executeCmd = location+"\\mysqldump -u "+dbUser+" -p"+dbPass+" "+dbName+" -r "+ exportLocation+"";

            Process runtimeProcess =Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();
            if(processComplete == 0)
            {
                JOptionPane.showMessageDialog(this,"Backup taken successfully");

            } else
            {
                JOptionPane.showMessageDialog(this,"Couldn't take mysql backup.");
            }
            //            Runtime runtime = Runtime.getRuntime();
            //            runtime.exec(new String[]{"C:\\xampp\\mysql\\bin\\mysqldump -u root -p guesswhat > E:\\backup.sql"});
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error:"+e);
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
        try
        {
            String dbName = "schooldb";
            String dbUser = "root";
            String dbPass = "guesswhat";
            String location = textLocation1.getText();
            String exportLocation = textExportLocation1.getText();
            
            /***********************************************************/
            // Execute Shell Command
            /***********************************************************/
            String executeCmd = null;
            executeCmd = location+"\\mysqldump -u "+dbUser+" -p"+dbPass+" "+dbName+" -r "+ exportLocation+"";

            Process runtimeProcess =Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();
            if(processComplete == 0)
            {
                JOptionPane.showMessageDialog(this,"Backup taken successfully");

            } else
            {
                JOptionPane.showMessageDialog(this,"Couldn't take mysql backup.");
            }
            //            Runtime runtime = Runtime.getRuntime();
            //            runtime.exec(new String[]{"C:\\xampp\\mysql\\bin\\mysqldump -u root -p guesswhat > E:\\backup.sql"});
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error:"+e);
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:\
        showAllUniqueStudentDetailsInTable();
        showNumberOfsearchedRecords();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
        if(textYearView.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "For which year?\nPlease enter year.");
        }
        else
        {
            String clas = comboClass2.getSelectedItem().toString();
            String year = "20"+textYearView.getText();
            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails"
                    + " RIGHT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID "
                    + "WHERE idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"' order by studentdetails.NAME ASC ";
            showStudentDetailsInTable(sql); 
            showGenderDetails();
            showBarDiagram();
            showNumberOfsearchedRecords();
        }
    }//GEN-LAST:event_jButton36ActionPerformed
    private void showAllUniqueStudentDetailsInTable()
    {
            try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            ResultSet resltset = null;
            Statement smnt = con.createStatement();
            String sql = "select STUDENTID, NAME, CLASS, ROLLNO, DATEOFBIRTH, MOBILEPHONE, ADDRESS from studentdetails";
//            String sql = "SELECT studentdetails.STUDENTID, studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, studentdetails.DATEOFBIRTH, studentdetails.MOBILEPHONE, studentdetails.ADDRESS from studentdetails";
            //    + " LEFT JOIN idclassroll ON idclassroll.STUDENTID=studentdetails.STUDENTID";
            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
            com.mysql.jdbc.PreparedStatement pstmt;
            
            pstmt = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql);
            resltset=pstmt.executeQuery();
            tableStudentsDetails.setModel(DbUtils.resultSetToTableModel(resltset));
            tableStudentsDetails.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableStudentsDetails.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableStudentsDetails.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableStudentsDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableStudentsDetails.getColumnModel().getColumn(4).setPreferredWidth(40);
            //pstmt.setString(1, "%" + termexam + "%");                        
        }
        catch(SQLException ex){
            //System.err.println("Unable to load driver!");
            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
                    "\nVendor Error: "+ex.getErrorCode());
            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    public void exportTable(JTable table, File file) throws IOException {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        FileWriter out = new FileWriter(file);
        String groupExport = "";
        for (int i = 0; i < (model.getColumnCount()); i++) {//* disable export from TableHeaders
            groupExport = String.valueOf(model.getColumnName(i));
            out.write(String.valueOf(groupExport) + "\t");
        }
        out.write("\n");
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < (model.getColumnCount()); j++) {
                if (model.getValueAt(i, j) == null) {
                    out.write("null" + "\t");
                } else {
                    groupExport = String.valueOf(model.getValueAt(i, j));
                    out.write(String.valueOf(groupExport) + "\t");
                }
            }
            out.write("\n");
        }
        out.close();
    }
    private void updateStudentDetails()
    {
        String studentid = textStudentID.getText();
        
        String name = textName.getText();
        
        
        java.util.Date date = dateChooser.getDate();
        String dateofbirth;
        if(date==null)
        {
            dateofbirth="";
        }
        else
        {
            dateofbirth = DateFormat.getDateInstance().format(date);
        }
        
        String address = textAddress.getText();
        String placeofbirth = textPlace.getText();
        String sex = textSex.getText();
        
        String telephone = textTelephone.getText();
        String mobile = textMobile.getText();
        String fathersname = textFathersname.getText();
        String mothersname = textMothersname.getText();
        String fathersmobile = textFathermobile.getText();
        String mothersmobile = textMothersmobile.getText();
        String fatherplaceofwork = textFathersplaceofwork.getText();
        String motherplaceofwork = textMothersplaceofwork.getText();
        String fathersprofession = textFatherprofession.getText();
        String mothersprofession = textMotherprofession.getText();
        
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("UPDATE studentdetails SET NAME='"+name+"', DATEOFBIRTH='"+dateofbirth+"', PLACEOFBIRTH='"+placeofbirth+"', SEX='"+sex+"', "
                    + "MOBILEPHONE='"+mobile+"', TELEPHONE='"+telephone+"', ADDRESS='"+address+"', FATHERNAME='"+fathersname+"', "
                    + "MOTHERNAME='"+mothersname+"', `FATHERMOBILEPHONE`='"+fathersmobile+"', `MOTHERMOBILEPHONE`='"+mothersmobile+"', `FATHERPROFESSION`='"+fathersprofession+"', `MOTHERPROFESSION`='"+mothersprofession+"',"
                    + "`FATHERPLACEOFWORK`='"+fatherplaceofwork+"', `MOTHERPLACEOFWORK`='"+motherplaceofwork+"' WHERE STUDENTID= '"+studentid+"'");
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Details Updated!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    
    private void insertIntoIDClassRoll(String stid, String clas, String rollno, String year)
    {
        int id = Integer.parseInt(stid);
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("INSERT INTO idclassroll (`STUDENTID`, `CLASS`, `ROLLNO`, `YEAR`, `STATUS`)"
                    + " VALUES('"+id+"', '"+clas+"', '"+rollno+"', '"+year+"', 'Present') ");
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Details Updated!");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    
    private void showNewStudents()
    {
        ResultSet rs;
        String year="20"+textNewYear.getText();
        String clas = (String) comboClass5.getSelectedItem();
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR from studentdetails "
                    + " inner join idclassroll on idclassroll.STUDENTID = studentdetails.STUDENTID"
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"' order by idclassroll.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableNewStudents.setModel(DbUtils.resultSetToTableModel(rs));
            tableNewStudents.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableNewStudents.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableNewStudents.getColumnModel().getColumn(2).setPreferredWidth(40);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void upgradeDetails()
    {
        int studentid = Integer.parseInt(textStudentIDUp.getText());
        String clas = (String)comboClass5.getSelectedItem();
        String rollno = textNewRollNo.getText();
        String year = "20"+textNewYear.getText();
        try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("insert into idclassroll values(?,?,?,?,?)");
            
            pstmt.setInt(1, studentid);
            pstmt.setString(2, clas);
            pstmt.setString(3, rollno);
            pstmt.setString(4, year);
            pstmt.setString(5, "Present");
            pstmt.executeUpdate();
            int roll = Integer.parseInt(textPrevRollno.getText())+1;
            textPrevRollno.setText(roll+"");
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    
    }
    private void showOldStudents(String year, String clas)
    {
        ResultSet rs;
        
        
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, idclassroll.CLASS, idclassroll.ROLLNO, idclassroll.YEAR, idclassroll.STATUS from studentdetails "
                    + " LEFT join idclassroll on idclassroll.STUDENTID = studentdetails.STUDENTID"
                    + " where idclassroll.CLASS='"+clas+"' AND idclassroll.YEAR='"+year+"' order by idclassroll.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableOldStudents.setModel(DbUtils.resultSetToTableModel(rs));
            tableOldStudents.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableOldStudents.getColumnModel().getColumn(1).setPreferredWidth(90);
            tableOldStudents.getColumnModel().getColumn(2).setPreferredWidth(30);
            tableOldStudents.getColumnModel().getColumn(3).setPreferredWidth(55);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    private void retrieveMoreDetails(String studentid, String clas)
    {
        String dateValue;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt, pstmt2;
            ResultSet rs, rs2;
            pstmt2 = con.prepareStatement("select CLASS, ROLLNO, YEAR from idclassroll"
                    + " where STUDENTID='"+studentid+"' and CLASS='"+clas+"'");
            rs2 = pstmt2.executeQuery();
            while(rs2.next())
            {
                textRollno1.setText(rs2.getString("ROLLNO"));
                textClassInDetails.setText(rs2.getString("CLASS"));
                textYearInDetails.setText(rs2.getString("YEAR"));
            }
            pstmt = con.prepareStatement("select STUDENTID, NAME, ROLLNO, DATEOFBIRTH, PLACEOFBIRTH, SEX, TELEPHONE, MOBILEPHONE, "
                    + "ADDRESS, FATHERNAME, MOTHERNAME, FATHERMOBILEPHONE, MOTHERMOBILEPHONE, FATHERPROFESSION, "
                    + "MOTHERPROFESSION, FATHERPLACEOFWORK, MOTHERPLACEOFWORK, OBSERVATIONS from studentdetails "
                    + " where STUDENTID='"+studentid+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                textStudentID.setText(rs.getString("STUDENTID"));
                textName.setText(rs.getString("NAME"));
                
                textAddress.setText(rs.getString("ADDRESS"));
                
                
                
                textPlace.setText(rs.getString("PLACEOFBIRTH"));
                textMobile.setText(rs.getString("MOBILEPHONE"));
                textTelephone.setText(rs.getString("TELEPHONE"));
                textSex.setText(rs.getString("SEX"));
                textFathersname.setText(rs.getString("FATHERNAME"));
                textMothersname.setText(rs.getString("MOTHERNAME"));
                textFathermobile.setText(rs.getString("FATHERMOBILEPHONE"));
                textMothersmobile.setText(rs.getString("MOTHERMOBILEPHONE"));
                textFatherprofession.setText(rs.getString("FATHERPROFESSION"));
                textMotherprofession.setText(rs.getString("MOTHERPROFESSION"));
                textFathersplaceofwork.setText(rs.getString("FATHERPLACEOFWORK"));
                textMothersplaceofwork.setText(rs.getString("MOTHERPLACEOFWORK"));
                
                dateValue = rs.getString("DATEOFBIRTH");
                if("".equals(dateValue))
                {
                    dateChooser.setDate(null);
                }
                else
                {
                    java.util.Date date = new SimpleDateFormat("MMM dd, yyyy").parse(dateValue);
                    dateChooser.setDate(date);
                }
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    
    private void fillTable(String clas, String year, String exam, String sub)
    {
        
        ResultSet rs;
        
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt;
            pstmt = con.prepareStatement("select studentdetails.NAME, om.SUBJECTS, om.ROLLNO, om.TERM, om.YEAR, om.OBTAINEDMARKS from om "
                    + " inner join studentdetails on om.STUDENTID = studentdetails.STUDENTID"
                    + " where om.CLASS='"+clas+"' AND om.TERM='"+exam+"' AND om.YEAR='"+year+"' AND om.SUBJECTS='"+sub+"' order by om.SUBJECTS ASC, om.ROLLNO ASC ");
            rs = pstmt.executeQuery();
            tableMarks.setModel(DbUtils.resultSetToTableModel(rs));
            tableMarks.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableMarks.getColumnModel().getColumn(2).setPreferredWidth(40);
            tableMarks.getColumnModel().getColumn(3).setPreferredWidth(40);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    
    private void deleteForTable(String sub, String clas, String rollno, String term, String year, DefaultTableModel model)
    {
        ResultSet rs=null;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("DELETE FROM om WHERE SUBJECTS='"+sub+"' AND CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND TERM = '"+term+"' AND YEAR = '"+year+"'");
            pstmt.executeUpdate();
            model.removeRow(tableMarks.getSelectedRow());
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    public void toEntermarks(){
        textRollno.setText("1");
        
        String termexam, subject, clas, noofst;
        termexam=(String)comboTermexam.getSelectedItem();
        subject = (String)comboSubject.getSelectedItem();
        clas = (String)comboClass.getSelectedItem();
        noofst = textNoofstd.getText();
        
        //panelTop.setVisible(false);
        
        labelTermexam.setText(termexam);
        labelSubject.setText(subject);
        
        labelNoofstudents.setText(noofst);
        String rollno=textRollno.getText();
        String year = textYear.getText();
        textClass.setText(clas);
        int n = Integer.parseInt(year);
        if(n <68 || n>90)
        {
            JOptionPane.showMessageDialog(null, "Enter the year of examination correctly.\nClue: It must be in B.S.");
        }
        else
        {
            panelBelow.setVisible(true);
            
//        studentid = clas+year+rollno;
//        labelStudentid.setText(studentid);
            String sub = (String)comboSubject.getSelectedItem();
            String yr = "20"+textYear.getText();
            
            labelName.setText("");
            labelStudentid.setText("");
            
            
            getStudentIDName(clas, rollno, yr);
            getFullMarks(clas,sub);
            
        }
    }
    private void addTabs()
    {
        StoreAttendance roy2 = new StoreAttendance();
        subTab.addTab("Attendance", roy2.getContentPane());
        
        StudentsDetails roy4 = new StudentsDetails();
        
        subTab.addTab("Students' Detail", roy4.getContentPane());
        roy4.fillComboClass();
        
        AddSubjects roy = new AddSubjects();
        subTab.addTab("Subjects", roy.getContentPane());
//        AddClass roy3 = new AddClass();
//        subTab.addTab("Class", roy3.getContentPane());
        
        MarkLedger roy5 = new MarkLedger();
        viewSubTab.addTab("Mark-Ledger", roy5.getContentPane());
        
        MarkSheet roy6 = new MarkSheet();
        viewSubTab.addTab("Mark-Sheet", roy6.getContentPane());
        
        //Database roy7 = new Database();
        //subTab.addTab("Import/Export", roy7.getContentPane());
    }
    public void getFullMarks(String clas,String sub)
    {
        String year="20"+textYear.getText();
        String fullmarks;
        ResultSet rs;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt=null;
            pstmt = con.prepareStatement("SELECT * FROM subject WHERE CLASS = '"+clas+"' AND SUBJECTS='"+sub+"' AND YEAR='"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                fullmarks = rs.getString("FULLMARKS");
                labelFullmarks.setText(fullmarks);
                textFM.setText(fullmarks);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
    }
    public void getStudentIDName(String clas, String rollno, String year)
    {
        String name,fullmarks;
        int studentid;
        ResultSet rs, rs2;
        try
        {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            java.sql.PreparedStatement pstmt, pstmt2;
            pstmt = con.prepareStatement("SELECT * FROM idclassroll WHERE CLASS = '"+clas+"' AND ROLLNO = '"+rollno+"' AND YEAR = '"+year+"'");
            rs = pstmt.executeQuery();
            while(rs.next())
            {
                studentid = rs.getInt("STUDENTID");

                labelStudentid.setText(studentid+"");

            }
            pstmt2 = con.prepareStatement("SELECT * FROM studentdetails WHERE STUDENTID='"+Integer.parseInt(labelStudentid.getText())+"'");
            rs2 = pstmt2.executeQuery();
            while(rs2.next())
            {
                name = rs2.getString("NAME");
                labelName.setText(name);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Can not retrieve details.\nError: "+e);
        }
    }
    
    
    public void enter_marks()
    {
        
        
        if(Float.parseFloat(textOm.getText())>Integer.parseInt(textFM.getText()))
        {
            JOptionPane.showMessageDialog(null, "Enter marks properly");
        }
        else if("".equals(textOm.getText()))
        {
            JOptionPane.showMessageDialog(null, "Enter marks properly");
        }
        else {
            String rollno = textRollno.getText();
            String exam = null;
            String fullmarks = labelFullmarks.getText();
            String obtainedmarks = textOm.getText();

            float computeom, textom, textfm, labelfm;
            textom = Float.parseFloat(obtainedmarks);
            textfm = Float.parseFloat(textFM.getText());
            labelfm = Float.parseFloat(labelFullmarks.getText());
            computeom = textom * labelfm / textfm;

            String omarks = computeom + "";
            String sub = labelSubject.getText();
            String stdid = labelStudentid.getText();

            switch (labelTermexam.getText()) {
                case "First Terminal Exam":
                    exam = "1";
                    break;
                case "Second Terminal Exam":
                    exam = "2";
                    break;
                case "Third Terminal Exam":
                    exam = "3";
                    break;
                default:
                    exam = "4";
                    break;
            }
            String clas = textClass.getText();
            String year = "20" + textYear.getText();
            MarkstoDB roy = new MarkstoDB();
            roy.storeMarks(stdid, exam, omarks, year, rollno, textClass.getText(), sub);
            int rollmax = Integer.parseInt(labelNoofstudents.getText());
            int x = Integer.parseInt(textRollno.getText());
            if (x < rollmax) {
                x++;
                String s = "" + x;
                textRollno.setText(s);
                textOm.setText("");

                getStudentIDName(clas, s, year);
            } else {
                JOptionPane.showMessageDialog(null, "You have entered marks for all students!");
                textOm.setText("");
            }
        
        }
    }
    
//    public void toShowmarksintable()
//    {
//        String cls = (String)comboClass2.getSelectedItem();
//        String terminalexam = null;
//        String subject = null;
//        if(null != terminalexam)
//        switch (terminalexam) {
//            case "First Terminal Exam":
//                terminalexam="1";
//                break;
//            case "Second Terminal Exam":
//                terminalexam="2";
//                break;
//            case "Third Terminal Exam":
//                terminalexam="3";
//                break;
//            case "Fourth Terminal Exam":
//                terminalexam="4";
//                break;
//            default:
//                break;
//        }
//        if(null != subject)
//        switch (subject) {
//            case "English":
//                subject ="english";
//                break;
//            case "Math":
//                subject="mathematics";
//                break;
//            case "Nepali":
//                subject="nepali";
//                break;
//            case "Science":
//                subject="science";
//                break;
//            case "English Oral":
//                subject="eo";
//                break;
//            case "Nepali Oral":
//                subject="no";
//                break;
//            case "Math Oral":
//                subject="mo";
//                break;
//            case "Social":
//                subject="social";
//                break;
//            case "General Knowledge":
//                subject="gk";
//                break;
//            case "Extra Activities":
//                subject="ea";
//                break;
//            case "Population":
//                subject="population";
//                break;
//            case "Health":
//                subject="health";
//                break;
//            case "Gulmohar":
//                subject="gulmohar";
//                break;
//            case "Health & Science":
//                subject="hs";
//                break;
//            case "Conversation":
//                subject="conversation";
//                break;
//            default:
//                break;
//        }
//        if(null!= cls)
//        switch (cls) {
//            case "Nursery":
//                cls="11";
//                break;
//            case "L.K.G.":
//                cls="12";
//                break;
//            case "U.K.G.":
//                cls="13";
//                break;
//            default:
//                break;
//        }
//        try {
//            DBConnect.DBconnection roy = new DBconnection();
//            Connection con = roy.getConnection();
//            ResultSet resltset = null;
//            Statement smnt = con.createStatement();
//            String sql = "select studentid, rollno, class, fm, om from "+subject+" where terminalexam="+terminalexam+" and class="+cls;
//            
//            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
//            PreparedStatement pstmt;
//            
//            pstmt = (PreparedStatement) con.prepareStatement(sql);
//            resltset=pstmt.executeQuery();
////            tableView.setModel(DbUtils.resultSetToTableModel(resltset));
//            //pstmt.setString(1, "%" + termexam + "%");
//            System.out.println("yasamma thik chha");
//                        
//        }
//        catch(SQLException ex){
//            System.err.println("Unable to load driver!");
//            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
//                    "\nVendor Error: "+ex.getErrorCode());
//            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
//            
//        }
//    }
    public void showStudentDetailsInTable(String sql)
    {
        try {
            DBConnect.DBconnection roy = new DBconnection();
            Connection con = roy.getConnection();
            ResultSet resltset = null;
            Statement smnt = con.createStatement();
            
            //e.studentid, e.rollno, e.terminalexam, e.fm, e.om 
            PreparedStatement pstmt;
            
            pstmt = (PreparedStatement) con.prepareStatement(sql);
            resltset=pstmt.executeQuery();
            tableStudentsDetails.setModel(DbUtils.resultSetToTableModel(resltset));
            tableStudentsDetails.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableStudentsDetails.getColumnModel().getColumn(1).setPreferredWidth(120);
            tableStudentsDetails.getColumnModel().getColumn(2).setPreferredWidth(55);
            tableStudentsDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableStudentsDetails.getColumnModel().getColumn(4).setPreferredWidth(30);
            //pstmt.setString(1, "%" + termexam + "%");                        
        }
        catch(SQLException ex){
            System.err.println("Unable to load driver!");
            JOptionPane.showMessageDialog(null,"SQL Exception: "+ex.getMessage()+ "\nSQL State: "+ex.getSQLState()+
                    "\nVendor Error: "+ex.getErrorCode());
            //Logger.getLogger(MarkstoDB.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new MainFrame().setVisible(true);
                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addPanel;
    private javax.swing.JButton btnEntermarks;
    private javax.swing.JButton buttonEnter;
    private javax.swing.JComboBox comboClass;
    private javax.swing.JComboBox comboClass2;
    private javax.swing.JComboBox comboClass4;
    private javax.swing.JComboBox comboClass5;
    private javax.swing.JComboBox comboClass6;
    private javax.swing.JComboBox comboClass7;
    private javax.swing.JComboBox comboSubject;
    private javax.swing.JComboBox comboTermexam;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField labelFullmarks;
    private javax.swing.JLabel labelName;
    private javax.swing.JTextField labelNoOfResults;
    private javax.swing.JLabel labelNoofstudents;
    private javax.swing.JTextField labelStudentid;
    private javax.swing.JLabel labelSubject;
    private javax.swing.JLabel labelTermexam;
    public javax.swing.JTabbedPane mainTab;
    private javax.swing.JPanel panelBelow;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel panelTop;
    private javax.swing.JTabbedPane subTab;
    private javax.swing.JTable tableMarks;
    private javax.swing.JTable tableNewStudents;
    private javax.swing.JTable tableOldStudents;
    private javax.swing.JTable tableStudentsDetails;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textClass;
    private javax.swing.JTextField textClassInDetails;
    private javax.swing.JTextField textExportLocation;
    private javax.swing.JTextField textExportLocation1;
    private javax.swing.JTextField textFM;
    private javax.swing.JTextField textFathermobile;
    private javax.swing.JTextField textFatherprofession;
    private javax.swing.JTextField textFathersNameSearch;
    private javax.swing.JTextField textFathersname;
    private javax.swing.JTextField textFathersplaceofwork;
    private javax.swing.JTextField textFemaleSt;
    private javax.swing.JTextField textLocation;
    private javax.swing.JTextField textLocation1;
    private javax.swing.JTextField textMaleSt;
    private javax.swing.JTextField textMobile;
    private javax.swing.JTextField textMotherprofession;
    private javax.swing.JTextField textMothersNameSearch;
    private javax.swing.JTextField textMothersmobile;
    private javax.swing.JTextField textMothersname;
    private javax.swing.JTextField textMothersplaceofwork;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textNewRollNo;
    private javax.swing.JTextField textNewYear;
    private javax.swing.JTextField textNoofresults;
    private javax.swing.JTextField textNoofstd;
    private javax.swing.JTextField textOldRollno;
    private javax.swing.JTextField textOm;
    private javax.swing.JTextField textPlace;
    private javax.swing.JTextField textPrevRollno;
    private javax.swing.JTextField textRollNoLeft;
    private javax.swing.JTextField textRollno;
    private javax.swing.JTextField textRollno1;
    private javax.swing.JTextField textSex;
    private javax.swing.JTextField textStudentID;
    private javax.swing.JTextField textStudentIDUp;
    private javax.swing.JTextField textStudentName;
    private javax.swing.JTextField textStudentsNameSearch;
    private javax.swing.JTextField textTelephone;
    private javax.swing.JTextField textTotalSt;
    private javax.swing.JTextField textYear;
    private javax.swing.JTextField textYearInDetails;
    private javax.swing.JTextField textYearLeft;
    private javax.swing.JTextField textYearUp1;
    private javax.swing.JTextField textYearUp2;
    private javax.swing.JTextField textYearView;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JTabbedPane viewSubTab;
    // End of variables declaration//GEN-END:variables
}
